"""
قوانین الزامی برای نام‌گذاری متغیرها در پایتون:

موارد ممنوع
شروع با عدد: نام‌ها نمی‌توانند با عدد شروع شوند.
فاصله: فاصله مجاز نیست (از _ استفاده کنید).
کاراکترهای خاص: از این نمادها استفاده نکنید:
{:' ", < > / ؟ | (اسلش) ! @ # % ^ & * ~ +}
موارد توصیه‌شده (بر اساس PEP8)
نام‌ها حروف کوچک باشند (مثلاً my_variable).
از زیرخط (_) برای جداکردن کلمات استفاده کنید (مثلاً user_name).
از کلمات کلیدی پایتون مانند list و str خودداری کنید.
از حروف تکی l (حرف ال کوچک)، O (حرف او بزرگ) و I (حرف آی بزرگ) اجتناب کنید چون با اعداد 1 و 0 اشتباه گرفته می‌شوند.
"""
# Valid names (نام‌های مجاز)
user_name = "Ali"       # خروجی: user_name = Ali (ترجمه: نام کاربری مجاز)
total_income = 50000    # خروجی: total_income = 50000 (ترجمه: درآمد کل مجاز)

# Invalid names (نام‌های نامجاز - خطای اجرا می‌شوند)
# 1user = "Error"      # ❌ شروع با عدد
# my-name = "Error"    # ❌ استفاده از خط تیره
# user@name = "Error"  # ❌ استفاده از @

# ---------------------------------------------------------------------------------------------
print("-" * 80)
"""
تایپ‌دهی پویا (Dynamic Typing)
پایتون از تایپ‌دهی پویا استفاده می‌کند:

می‌توانید یک متغیر را به انواع داده‌های مختلف مقداردهی مجدد کنید.
این ویژگی توسعه را سریع‌تر می‌کند، اما ممکن است باعث باگ‌های غیرمنتظره شود.
با تابع type() می‌توانید نوع دادهٔ متغیر را بررسی کنید
"""
# Assign integer (مقداردهی عدد صحیح)
my_dogs = 2
print("my_dogs (integer) =", my_dogs)  # خروجی: my_dogs (integer) = 2 (ترجمه: تعداد سگ‌ها به صورت عدد صحیح)

# Reassign to list (مقداردهی مجدد به لیست)
my_dogs = ['Sammy', 'Frankie']
print("my_dogs (list) =", my_dogs)     # خروجی: my_dogs (list) = ['Sammy', 'Frankie'] (ترجمه: نام سگ‌ها به صورت لیست)

# Check integer type (بررسی نوع عدد صحیح)
a = 5
print("type(a) =", type(a))  # خروجی: type(a) = <class 'int'> (ترجمه: نوع a عدد صحیح است)

# Check tuple type (بررسی نوع تاپل)
b = (1, 2)
print("type(b) =", type(b))  # خروجی: type(b) = <class 'tuple'> (ترجمه: نوع b تاپل است)

"""
مزایا و معایب تایپ‌دهی پویا:

کار با آن بسیار ساده است
ممکن است باعث باگ‌های غیرمنتظره شود

زمان توسعه سریع‌تر می‌شود
باید از type() برای بررسی نوع استفاده کنید
"""

# ---------------------------------------------------------------------------------------------
print("-" * 80)
"""
مقداردهی مجدد متغیرها (Reassignment)
روش‌های مقداردهی
روش استاندارد: نام = مقدار جدید
روش میانبر: استفاده از +=, -=, *= و /=
"""
# Standard reassignment (مقداردهی مجدد استاندارد)
a = 5
a = a + 10  # معادل a = 15
print("a after standard reassignment =", a)  # خروجی: a after standard reassignment = 15 (ترجمه: مقداردهی استاندارد)

# Shortcut reassignment (مقداردهی میانبر)
a += 5      # معادل a = a + 5
print("a after +=5 =", a)  # خروجی: a after +=5 = 20 (ترجمه: استفاده از +=)

a *= 2      # معادل a = a * 2
print("a after *=2 =", a)  # خروجی: a after *=2 = 40 (ترجمه: استفاده از *=)
